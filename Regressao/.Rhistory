aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 669*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.125, b*1.125*1.1, b*1.125*1.1*1.35)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.125, b*1.125*1.1, b*1.125*1.1*1.35)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.26)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.265)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.268)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.266)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.267)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.2675)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.2672)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.2671)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.26705)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.26707)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.267065)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.267068)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
a <- 671*(.9)^(1:32)
b <- c(6800)
for(i in 2:32){
b[i] <- b[(i-1)]-a[(i-1)]
}
b
b <- ifelse(b>1000, b, 1000)
aa <- data.frame(b, b*1.05, b*1.05*1.05, b*1.125*1.05*1.267069)
aa <- aa*1000
aa <- round(aa)
for(i in 1:4){
aa[,i] <- paste0("$", formatC(as.numeric(aa[,i]), format="f", digits=0, big.mark=","))
}
rownames(aa) <- paste("Pick", 1:32)
colnames(aa) <- paste("Year", 1:4)
knitr::kable(aa)
(1/2)/sqrt(5/6)
(1/2)/(1/6)
antes <- c(68,94,85,103,56,70,57,83,59,102,64,75,88,107,67,83,97,94,81,86,91,75,68,64,83,73,75,77,86,97)
depois <- c(67,81,80,97,53,67,54,73,55,88,63,68,79,100,73,83,79,65,77,83,77,68,70,61,64,70,63,75,70,71)
t.test(antes,depois,paired = T,alternative = "less")
t.test(antes,depois,paired = T,alternative = "greater")
var(antes)
var(depois)
var.test(antes,depois)
t.test(antes,depois,paired = T,alternative = "greater",var.equal = T)
t.test(antes,depois,paired = T,alternative = "greater",var.equal = F)
T
t.test(antes,depois,paired = T,alternative = "greater",var.equal = T)
t.test(antes-depois)
t.test(antes-depois, alternative = "greater")
mean(antes-depois)
D <- antes-depois
D-mean(D)
(D-mean(D))^2
sum((D-mean(D))^2)
sum((D-mean(D))^2)/29
sd <- sum((D-mean(D))^2)/29
sqrt(sd/30)
deno <- sqrt(sd/30)
7.8/deno
estteste <- 7.8/deno
qt(estteste, 29)
pt(estteste, 29)
1-pt(estteste, 29)
qt(estteste, 29)
qt(.95, 29)
x <- -100:100
y <- -100:100
3*x^2 - 4*x*y + 6
plot(3*x^2 - 4*x*y + 6)
func <- function(par){
x <- par[1]
y <- par[2]
if(x^2+y^2 == 1){
3*x^2 - 4*x*y + 6
}else{
-Inf
}
}
optim(func, c(0,0))
optim(func, c(0,0), control=list(fnscale=-1))
optim(c(0,0), func, control=list(fnscale=-1))
optim(c(1,1), func, control=list(fnscale=-1))
optim(c(sqrt(0.5),sqrt(0.5)), func, control=list(fnscale=-1))
sqrt(0.5)
sqrt(0.5)^2
func <- function(par){
x <- par[1]
y <- par[2]
if(x^2 + y^2 == 1){
3*x^2 - 4*x*y + 6
}else{
-Inf
}
}
optim(c(sqrt(0.5),sqrt(0.5)), func, control=list(fnscale=-1))
optim(c(sqrt(0.75),sqrt(0.25)), func, control=list(fnscale=-1))
optim(c(1,0), func, control=list(fnscale=-1))
optim(c(0,1), func, control=list(fnscale=-1))
func <- function(par){
x <- par[1]
y <- par[2]
if(x^2 + y^2 == 1){
9*x^2 - 4*x*y + 6*y^2
}else{
-Inf
}
}
optim(c(0,1), func, control=list(fnscale=-1))
optim(c(1,0), func, control=list(fnscale=-1))
x <- sqrt(0.5)
y <- sqrt(0.5)
9*x^2 - 4*x*y + 6*y^2
x <- seq(0,1,by=.0001)
y <- seq(0,1,by=.0001)
plot(9*x^2 - 4*x*y + 6*y^2)
x <- seq(0,2,by=.0001)
y <- seq(0,2,by=.0001)
plot(9*x^2 - 4*x*y + 6*y^2)
9*x^2 - 4*x*y + 6*y^2
x <- seq(0,2,by=.001)
y <- seq(0,2,by=.001)
plot(9*x^2 - 4*x*y + 6*y^2)
x <- seq(0,3,by=.001)
y <- seq(0,3,by=.001)
plot(9*x^2 - 4*x*y + 6*y^2)
func <- function(par){
x <- par[1]
y <- par[2]
if(x^2 + y^2 <= 1){
9*x^2 - 4*x*y + 6*y^2
}else{
-Inf
}
}
optim(c(1,0), func, control=list(fnscale=-1))
optim(c(0,1), func, control=list(fnscale=-1))
optim(c(1,0), func, control=list(fnscale=-1))
optim(c(0,0), func, control=list(fnscale=-1))
f <- 9*x^2 - 4*x*y + 6*y^2
which(x^2+y^2 > 0.99 & x^2+y^2 < 1.01)
plot(f[705:711])
x <- seq(-1,1,by=.001)
y <- seq(-1,1,by=.001)
f <- 9*x^2 - 4*x*y + 6*y^2
which(x^2+y^2 > 0.99 & x^2+y^2 < 1.01)
plot(f)
x <- seq(-1,1,by=.001)
y <- seq(-1,1,by=.001)
f <- 9*x^2 - 4*x*y + 6*y^2
which(x^2+y^2 > 0.99 & x^2+y^2 < 1.01)
plot(f)
points(f[which(x^2+y^2 > 0.99 & x^2+y^2 < 1.01)], col=2)
points(which(x^2+y^2 > 0.99 & x^2+y^2 < 1.01),f[which(x^2+y^2 > 0.99 & x^2+y^2 < 1.01)], col=2)
x[which(x^2+y^2 > 0.99 & x^2+y^2 < 1.01)]
y[which(x^2+y^2 > 0.99 & x^2+y^2 < 1.01)]
install.packages("plotrix")
library(plotrix)
draw.circle(0,0,1)
draw.circle(0,0,1)
plot()
x <- seq(-1,1,by=.001)
y <- seq(-1,1,by=.001)
f <- 9*x^2 - 4*x*y + 6*y^2
which(x^2+y^2 > 0.99 & x^2+y^2 < 1.01)
plot(f)
draw.circle(0,0,1)
setwd("D:/Gu/ENAP/Dados/Regressao")
aa <- read.csv2("DADOS.csv")
bb <- read.csv2("DADOS_2.csv")
str(aa)
aa$CO_MES <- as.factor(aa$CO_MES)
str(bb)
bb$CO_MES <- as.factor(bb$CO_MES)
mod2 <- lm(N_PRODUTOS~N_PAIS+N_VIAS+N_URF+KG_LIQUIDO+VL_FOB, data=bb)
vif(mod2)
summary(mod2)
str(aa)
aa$CO_MES <- as.factor(aa$CO_MES)
str(bb)
bb$CO_MES <- as.factor(bb$CO_MES)
mod2 <- lm(N_PRODUTOS~., data=bb)
summary(mod2)
mod3 <- lm(N_PRODUTOS~., data=aa)
summary(mod3)
library(readxl)
viagens_todas <- read_excel("viagens todas.xlsx",
na = "-")
viagens_todas <- as.data.frame(viagens_todas)
for(i in 1:41){
if(is.character(viagens_todas[,i])){
viagens_todas[,i] <- as.factor(viagens_todas[,i])
}
}
str(viagens_todas)
nlevels(viagens_todas)
nlevels(viagens_todas[,3])
is.factor(viagens_todas[,3])
retirar <- c()
is.na.POSIXlt(viagens_todas[,"Data Fim da Viagem"])
retirar <- c()
for(i in 1:41){
if(is.factor(viagens_todas[,i])){
if(nlevels(viagens_todas[,i]) == 1 | nlevels(viagens_todas[,i]) > 8){
retirar <- c(retirar,i)
}
}
}
viagens_todas <- viagens_todas[,-retirar]
str(viagens_todas)
is.numeric.POSIXt(viagens_todas[,18])
is.numeric.POSIXt(viagens_todas[,17])
str(viagens_todas[,17])
str(viagens_todas[,17])
class(viagens_todas[,17])
class(viagens_todas[,18])
class(viagens_todas[,18])[1] == "POSIXct"
library(readxl)
viagens_todas <- read_excel("viagens todas.xlsx",
na = "-")
viagens_todas <- as.data.frame(viagens_todas)
for(i in 1:41){
if(is.character(viagens_todas[,i])){
viagens_todas[,i] <- as.factor(viagens_todas[,i])
}
}
retirar <- c()
for(i in 1:41){
if(is.factor(viagens_todas[,i])){
if(nlevels(viagens_todas[,i]) == 1 | nlevels(viagens_todas[,i]) > 8 | class(viagens_todas[,i])[1] == "POSIXct"){
retirar <- c(retirar,i)
}
}
}
viagens_todas <- viagens_todas[,-retirar]
str(viagens_todas)
library(readxl)
viagens_todas <- read_excel("viagens todas.xlsx",
na = "-")
viagens_todas <- as.data.frame(viagens_todas)
for(i in 1:41){
if(is.character(viagens_todas[,i])){
viagens_todas[,i] <- as.factor(viagens_todas[,i])
}
}
retirar <- c()
for(i in 1:41){
if(is.factor(viagens_todas[,i])){
if(nlevels(viagens_todas[,i]) == 1 | nlevels(viagens_todas[,i]) > 8){
retirar <- c(retirar,i)
}
}else if(class(viagens_todas[,i])[1] == "POSIXct"){
retirar <- c(retirar,i)
}
}
viagens_todas <- viagens_todas[,-retirar]
str(viagens_todas)
cor(viagens_todas)
cor(viagens_todas[,7:21])
summary(viagens_todas)
viagens_todas <- viagens_todas[,-c("Quantidade de Viagem","Valor Médio das Viagens","Tarifa Praticada","Valor da Passagem","Quantidade de Diárias")]
viagens_todas <- viagens_todas[,-c("Quantidade de Viagem","Valor Médio das Viagens","Tarifa Praticada","Valor da Passagem","Quantidade de Diárias")]
str(viagens_todas)
viagens_todas <- viagens_todas[,-c(7,8,10,13,20)]
mod <- lm(`Valor da Viagem`~., data=viagens_todas)
summary(mod)
library(car)
vif(mod)
mod <- lm(`Valor da Viagem`~., data=viagens_todas)
summary(mod)
cor(viagens_todas[,7:16])
plot(viagens_todas$`Valor da Viagem`, viagens_todas$`Valor Bilhete`)
mod <- lm(`Valor da Viagem`~`Valor Bilhete`, data=viagens_todas)
summary(mod)
abline(mod)
abline(mod$cocoefficients)
abline(mod$coefficients)
plot(viagens_todas$`Valor Bilhete`, viagens_todas$`Valor da Viagem`)
abline(mod$coefficients)
mod <- lm(`Valor da Viagem`~., data=viagens_todas)
mod$effects
View(mod)
mod$assign
mod$contrasts
mod$terms
mod$model
summary(viagens_todas)
viagens_todas <- viagens_todas[,-c(2,3,5)]
mod <- lm(`Valor da Viagem`~., data=viagens_todas)
summary(mod)
write.csv(viagens_todas, "viagens_todas.csv")
mod2 <- lm(N_PRODUTOS~., data=bb)
summary(mod2)
mod3 <- lm(N_PRODUTOS~., data=aa)
summary(mod3)
summary(mod)
mod <- glm(`Tipo Viagem~., data=viagens_todas, family = binomial(link = "logit"))
summary(mod)
mod <- glm(`Tipo Viagem`~., data=viagens_todas, family = binomial(link = "logit"))
summary(mod)
